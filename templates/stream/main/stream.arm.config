[SERVER]
11.11.11.11

[DOWNLOAD]
stream/5.10 $JARVIS_PROXY/jeffhammond/STREAM/archive/refs/heads/master.zip STREAM.zip

[DEPENDENCY]
module purge
module use ./software/modulefiles
./jarvis -install bisheng/2.5.0 com
module load bisheng/2.5.0
export CC=`which clang`
export CXX=`which clang++`
export FC=`which flang`
rm -rf STREAM-master
if [ ! -d "STREAM-master" ]; then
   unzip ./downloads/STREAM.zip
fi

[ENV]
module purge
module use ./software/modulefiles
module load bisheng/2.5.0
export CC=`which clang`
export CXX=`which clang++`
export FC=`which flang`
export STREAM_HOME=$JARVIS_ROOT/STREAM-master
export OMP_PROC_BIND=true
export OMP_NUM_THREADS=1
echo 3 > /proc/sys/vm/drop_caches

[APP]
app_name = STREAM
build_dir = $STREAM_HOME
binary_dir = $STREAM_HOME
case_dir = $STREAM_HOME

[BUILD]
cat /dev/null > Makefile  
echo 'CC = clang' >> Makefile
echo '#CFLAGS = -O2 -fopenmp' >> Makefile
echo 'CFLAGS = -O2 -ftree-vectorize -fopenmp -DSTREAM_ARRAY_SIZE=96000000 -DNTIMES=100 -mcmodel=large' >> Makefile
echo '#FC = gfortran' >> Makefile
echo '#FFLAGS = -O2 -fopenmp' >> Makefile
echo 'all: stream_c.exe' >> Makefile
printf 'stream_f.exe: stream.f mysecond.o\n\t$(CC) $(CFLAGS) -c mysecond.c\n\t$(FC) $(FFLAGS) -c stream.f\n\t$(FC) $(FFLAGS) stream.o mysecond.o -o stream_f.exe\n' | sed -i '6r/dev/stdin' Makefile
printf 'stream_c.exe: stream.c\n\t$(CC) $(CFLAGS) stream.c -o stream_c.exe\n'| sed -i '10r /dev/stdin' Makefile
printf 'clean:\n\trm -f stream_f.exe stream_c.exe *.o\n'| sed -i '12r /dev/stdin' Makefile
echo '# an example of a more complex build line for the Intel icc compiler' >> Makefile
printf 'stream.icc: stream.c\n\ticc -O3 -xCORE-AVX2 -ffreestanding -qopenmp -DSTREAM_ARRAY_SIZE=80000000 -DNTIMES=20 stream.c -o stream.omp.AVX2.80M.20x.icc\n'| sed -i '15r /dev/stdin' Makefile

make 

export OMP_NUM_THREADS=36

[CLEAN]
make clean

[RUN]
run = 
binary = ./stream_c.exe 2>&1 >> stream.output.log  
nodes = 1 

[BATCH]
for core_num in 1 2 4 8 16 32 64 128
do
   echo 3 > /proc/sys/vm/drop_caches
   export OMP_NUM_THREADS=$core_num
   ./stream_c.exe >> stream.output.log
done
