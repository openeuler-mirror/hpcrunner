[SERVER]
11.11.11.11

[DOWNLOAD]
lammps/2021.5.27 https://download.lammps.org/tars/lammps-27May2021.tar.gz

[DEPENDENCY]

module purge
./jarvis -install bisheng/2.1.0 com
module use ./software/modulefiles
module load bisheng/2.1.0
export CC=clang CXX=clang++ FC=flang
./jarvis -install hmpi/1.1.1 clang
module load hmpi/1.1.1
./jarvis -install fftw/3.3.8 clang+mpi
tar -xvf ${JARVIS_DOWNLOAD}/lammps-27May2021.tar.gz

[ENV]
module purge
module use ./software/modulefiles
module load bisheng/2.1.0
module load hmpi/1.1.1
export CC=clang CXX=clang++ FC=flang
module load fftw/3.3.8

[APP]
app_name = lammps
build_dir = ./lammps-27May2021/src
binary_dir = $JARVIS_ROOT/lammps-27May2021/src
case_dir = ./workloads/lammps_graphyne_nanotube/airebo/

[BUILD]
sed -i '9c\export OMPI_CXX = clang++'   MAKE/OPTIONS/Makefile.g++_openmpi
sed -i '11c\CCFLAGS = -g -O3 -fopenmp -I${JARVIS_ROOT}/software/compiler/bisheng/2.1.0/include/c++/v1 -L${JARVIS_ROOT}/software/compiler/bisheng/2.1.0/lib -std=c++11 -stdlib=libc++ -lc++ -lc++abi'   MAKE/OPTIONS/Makefile.g++_openmpi
sed -i '16c\LINKFLAGS =  -g -O -fopenmp -L${JARVIS_ROOT}/software/compiler/bisheng/2.1.0/lib -std=c++11 -stdlib=libc++ -lc++ -lc++abi'   MAKE/OPTIONS/Makefile.g++_openmpi
sed -i '54c\FFT_INC = -DFFT_FFTW -I${JARVIS_ROOT}/software/libs/bisheng2.1.0/hmpi1.1.1/fftw/3.3.8/include ' MAKE/OPTIONS/Makefile.g++_openmpi
sed -i '55c\FFT_PATH = -L${JARVIS_ROOT}/software/libs/bisheng2.1.0/hmpi1.1.1/fftw/3.3.8/lib'  MAKE/OPTIONS/Makefile.g++_openmpi
sed -i '56c\FFT_LIB = -lfftw3' MAKE/OPTIONS/Makefile.g++_openmpi
make yes-KSPACE
make yes-MPIIO
make yes-MISC
make yes-MOLECULE
make yes-MANYBODY
make yes-USER-REAXC
make yes-USER-OMP
make g++_openmpi -j

[RUN]
run = dsub -n lammps_hmpi -A shenchao --job_type cosched -N 1 -R "cpu=64" -o out_%J.log -e err_%J.log mpirun -x PATH -x LD_LIBRARY_PATH -x OMP_NUM_THREADS=2 -map-by ppr:64:node:pe=2 --mca plm_rsh_agent /opt/batch/agent/tools/dstart -np 64
#run = mpirun -np 128
#run = cat workloads/lammps_graphyne_nanotube/airebo/out_13118.log
binary = lmp_g++_openmpi -in in.tension -v model_name data.lmp -v rate 0.005 -v T 100
nodes = 1

[BATCH]
#!/bin/bash

temperatures='100 500 900'
N=15                           #
lmp_exec=lmp                   #
tension_rate=0.005            #

for T in ${temperatures};do
  mpirun -np ${N} ${lmp_exec} -in in.tension -v model_name data.lmp -v rate ${tension_rate} -v T ${T}
done

