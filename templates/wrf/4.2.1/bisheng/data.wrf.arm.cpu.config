[SERVER]
11.11.11.11

[DOWNLOAD]
wrf/4.2.1 $JARVIS_PROXY/wrf-model/WRF/archive/refs/tags/v4.2.1.tar.gz wrf-4.2.1.tar.gz
case/conus12km https://www2.mmm.ucar.edu/wrf/src/conus12km.tar.gz

[DEPENDENCY]
set -e
set -x
# basic system components
./CHECK_ROOT
module purge
module use ./software/modulefiles
./jarvis -install bisheng/3.2.0-mini com
module load bisheng/3.2.0-mini
export CC=clang CXX=clang++ FC=flang
./jarvis -install jasper/1.900.2 bisheng
module use ./software/moduledeps/bisheng3.2.0
module load jasper/1.900.2
./jarvis -install hmpi/2.3.0 bisheng
module load hmpi/2.3.0
export CC=mpicc CXX=mpicxx FC=mpifort
./jarvis -install hdf5/1.12.0/clang bisheng+mpi
module load hdf5-clang/1.12.0
./jarvis -install pnetcdf/1.12.1 bisheng+mpi
module load pnetcdf/1.12.1
./jarvis -install netcdf/4.8.1/clang bisheng+mpi
module load netcdf-clang/4.8.1
./jarvis -install kml/2.2.0/bisheng bisheng

[ENV]
#!/bin/bash
module purge
module use ${JARVIS_ROOT}/software/modulefiles
module load bisheng/3.2.0-mini
module use ${JARVIS_ROOT}/software/moduledeps/bisheng3.2.0
module load jasper/1.900.2
module load hmpi/2.3.0
module load hdf5-clang/1.12.0 pnetcdf/1.12.1 netcdf-clang/4.8.1
module load kml-bisheng/2.2.0
export WRFIO_NCD_LARGE_FILE_SUPPORT=1
export NETCDF=$NETCDF_CLANG_PATH
export HDF5=$HDF5_CLANG_PATH
export PHDF5=$HDF5
export PNETCDF=$PNETCDF_PATH
export JASPER=$JASPER_PATH
export JASPERLIB=$JASPER_PATH/lib
export JASPREINC=$JASPER_PATH/include
export CPPFLAGS="-I$HDF5/include -I$PNETCDF/include -I$NETCDF/include"
export LDFLAGS="-L$HDF5/lib -L$PNETCDF/lib -L$NETCDF/lib -lnetcdf -lnetcdff -lpnetcdf -lhdf5_hl -lhdf5 -lz"
export CC=mpicc CXX=mpicxx FC=mpif90 F77=mpif90 F90=mpif90
export WRF_DIR=$JARVIS_ROOT/workloads/WRF-4.2.1
export MPI_LIB="-L$MPI_LIB -lmpi -lomp"
export INCLUDE=$WRF_DIR/include:$INCLUDE
export KML_LIB=$KML_BISHENG_PATH/lib
export CASE_DIR=$WRF_DIR/case/conus12km

[APP]
app_name = WRF
build_dir = ${WRF_DIR}
binary_dir = ${WRF_DIR}/run
case_dir = ${CASE_DIR}

[BUILD]
cd ${JARVIS_ROOT}
./jarvis -e
source ./env.sh
cd ${JARVIS_ROOT}/workloads
if [ -d "./WRF-4.2.1" ]; then
    rm -rf ./WRF-4.2.1
fi
tar -zxvf $JARVIS_DOWNLOAD/wrf-4.2.1.tar.gz
cd WRF-4.2.1
mkdir case
patch -p1 < ${JARVIS_ROOT}/templates/wrf/4.2.1/bisheng/wrf-4.2.1.patch
echo 4 | ./configure
./compile em_real 2>&1 | tee compile.log 

[CLEAN]
./clean -a

[RUN]
run = mpirun --allow-run-as-root -n 32 -x OMP_NUM_THREADS=1 -bind-to core $WRF_DIR/run/wrf.exe
binary = 
nodes = 1

[JOB]
#!/bin/sh
#DSUB -n wrf_test
#DSUB --job_type cosched:hmpi
#DSUB -A root.default
#DSUB -q root.default
#DSUB -N 1
#DSUB -R cpu=128
#DSUB -oo wrf.%J.out
#DSUB -eo wrf.%J.err

##set runtime environment variables

ulimit -s unlimited
ulimit -c unlimited
rm -rf rsl.*
echo "----HOSTFILE generated---"
cat $CCS_HOST_FILE
echo "-------------------------"
EXEC_CMD="time -p mpirun $CCS_MPI_OPTIONS -n 32 -x OMP_NUM_THREADS=1 -x UCX_NET_DEVICES=mlx5_0:1 -mca io romio321 -mca pml ucx -mca btl ^vader,tcp,openib,uct -x UCX_TLS=self,sm,rc -bind-to core -x PATH -x LD_LIBRARY_PATH $WRF_DIR/run/wrf.exe"
echo "$EXEC_CMD"
date
$EXEC_CMD
date
