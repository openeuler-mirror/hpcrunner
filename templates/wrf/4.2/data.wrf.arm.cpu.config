[SERVER]
11.11.11.11

[DOWNLOAD]
wrf/4.2 $JARVIS_PROXY/wrf-model/WRF/archive/refs/tags/v4.2.tar.gz wrf-4.2.tar.gz

[DEPENDENCY]
module purge
module use ./software/modulefiles
./jarvis -install kgcc/9.3.1 com
module load kgcc/9.3.1
export CC=gcc CXX=g++ FC=gfortran

./jarvis -install hmpi/1.1.1 gcc
module load hmpi/1.1.1
export CC=mpicc CXX=mpicxx FC=mpifort
./jarvis -install hdf5/1.10.1 gcc+mpi
./jarvis -install package/pnetcdf/1.11.2 gcc+mpi
./jarvis -install package/netcdf/4.7.0 gcc+mpi
./jarvis -install optimized-routines/20.02 gcc+mpi
cd ${JARVIS_TMP}
tar -zxvf $JARVIS_DOWNLOAD/wrf-4.2.tar.gz

[ENV]
module purge
module use ./software/modulefiles
module load kgcc/9.3.1
module load hmpi/1.1.1
export CC=mpicc CXX=mpicxx FC=mpifort
module load pnetcdf/1.11.2
module load netcdf/4.7.0
module load optimized-routines/20.02

[APP]
app_name = WRF	
build_dir = ${JARVIS_ROOT}
binary_dir = ${JARVIS_ROOT}/software/apps/bisheng2.1.0/hmpi1.1.1/wrf
case_dir = ${JARVIS_ROOT}/software/apps/bisheng2.1.0/hmpi1.1.1/wrf

[BUILD]
cd ${JARVIS_TMP}
cd WRF-4.2

export HDF5=`which h5diff`
export HDF5=${HDF5%/*/*}
export NETCDF=`nc-config --prefix`
export PNETCDF=`pnetcdf-config --prefix`

export CPPFLAGS="-I$HDF5/include -I$PNETCDF/include -I$NETCDF/include"
export LDFLAGS="-L$HDF5/lib -L$PNETCDF/lib -L$NETCDF/lib -lnetcdf -lnetcdff -lpnetcdf -lhdf5_hl -lhdf5 -lz"
export WRFIO_NCD_LARGE_FILE_SUPPORT=1

sed -i $((`sed -n '$=' arch/configure.defaults`-2)),$((`sed -n '$=' arch/configure.defaults`))d arch/configure.defaults

mathlib_path=$JARVIS_ROOT/software/compiler/kgcc/9.3.1/lib64/libhpc
cat >> arch/configure.defaults <<EOF
################################################## #########
#ARCH   Linux   aarch64,gnu OpenMPI #serial smpar dmpar dm+sm
DESCRIPTION     =       GNU (\$SFC/\$SCC)
DMPARALLEL      =        1
OMPCPP          =        -D_OPENMP
OMP             =        -fopenmp
OMPCC           =        -fopenmp
SFC             =       gfortran
SCC             =       gcc
CCOMP           =       gcc
DM_FC           =       mpif90 -f90=\$(SFC)
DM_CC           =       mpicc -cc=\$(SCC) -DMPI2_SUPPORT
FC              =       CONFIGURE_FC
CC              =       CONFIGURE_CC
LD              =       \$(FC)
RWORDSIZE       =       CONFIGURE_RWORDSIZE
PROMOTION       =       #-fdefault-real-8
ARCH_LOCAL      =       -DNONSTANDARD_SYSTEM_SUBR  -DWRF_USE_CLM
CFLAGS_LOCAL    =       -w -O3 -c -march=armv8.2-a -L$mathlib_path -lmathlib
LDFLAGS_LOCAL   =
CPLUSPLUSLIB    =
ESMF_LDFLAG     =      \$(CPLUSPLUSLIB)
FCOPTIM         =       -O3 -ftree-vectorize -funroll-loops -mcpu=tsv110 -march=armv8.2-a -L$mathlib_path -lmathlib
FCREDUCEDOPT    =       \$(FCOPTIM)
FCNOOPT         =       -O0
FCDEBUG         =       # -g \$(FCNOOPT)  # -fbacktrace -ggdb-fcheck=bounds,do,mem,pointer -ffpe-trap=invalid,zero,overflow
FORMAT_FIXED    =       -ffixed-form
FORMAT_FREE     =       -ffree-form -ffree-line-length-none
FCSUFFIX        =
BYTESWAPIO      =       -fconvert=big-endian -frecord-marker=4
FCBASEOPTS_NO_G =       -w \$(FORMAT_FREE) \$(BYTESWAPIO)
FCBASEOPTS      =       \$(FCBASEOPTS_NO_G) \$(FCDEBUG)
MODULE_SRCH_FLAG =
TRADFLAG        =      -traditional
CPP             =      /lib/cpp -P
AR              =      ar
ARFLAGS         =      ru
M4              =      m4 -G
RANLIB          =      ranlib
RLFLAGS         =
CC_TOOLS        =      \$(SCC)

###########################################################
#ARCH  NULL
EOF

echo 4 | ./configure

./compile em_real 2>&1 | tee -a compile.log 

[CLEAN]
make clean

[RUN]
run = 
binary = 
nodes = 1

