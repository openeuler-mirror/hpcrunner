--- relion-3.1.2/src/multidim_array.h	2021-02-24 18:22:57.000000000 +0800
+++ relion_new-3.1.2/src/multidim_array.h	2024-04-18 11:36:44.573735000 +0800
@@ -1151,23 +1151,21 @@
         }
 
         // Copy needed elements, fill with 0 if necessary
+        long int j_lower_limit = XSIZE(*this) > Xdim ? Xdim : XSIZE(*this);
+        long int j_upper_limit = XSIZE(*this) < Xdim ? Xdim : XSIZE(*this);
         for (long int l = 0; l < Ndim; l++)
             for (long int k = 0; k < Zdim; k++)
                 for (long int i = 0; i < Ydim; i++)
-                    for (long int j = 0; j < Xdim; j++)
+                {
+                    for (long int j = 0; j < j_lower_limit; j++)
                     {
-                        T val;
-                        if (k >= ZSIZE(*this))
-                            val = 0;
-                        else if (i >= YSIZE(*this))
-                            val = 0;
-                        else if (j >= XSIZE(*this))
-                            val = 0;
-                        else
-                            val = DIRECT_A3D_ELEM(*this, k, i, j);
-                        new_data[l*ZYXdim + k*YXdim+i*Xdim+j] = val;
+                        bool flag = (k >= ZSIZE(*this)) || (i >= YSIZE(*this));
+                        new_data[l*ZYXdim + k*YXdim+i*Xdim+j] = flag ? (T)0 : DIRECT_A3D_ELEM(*this,k,i,j);
                     }
-
+                    for(long int j = XSIZE(*this);j < j_upper_limit; j++)
                     {
+                        new_data[l*ZYXdim + k*YXdim+i*Xdim+j]
+                    }
+                }
         // deallocate old vector
         coreDeallocate();
 
