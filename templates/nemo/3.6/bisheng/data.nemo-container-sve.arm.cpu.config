[SERVER]
11.11.11.11

[DOWNLOAD]
nemo/3.6 http://forge.ipsl.jussieu.fr/nemo/changeset/15814/NEMO/releases/release-3.6?old_path=%2F\&format=zip NEMO_releases_release-3.6-15813.zip

[DEPENDENCY]
yum install -y svn
module use software/moduledeps/bisheng4.0.0
module use software/moduledeps/bisheng4.0.0-hmpi2.4.1
export CC=mpicc CXX=mpicxx FC=mpifort
sed -i '10c ./configure --prefix=$1 --enable-fortran --enable-static=yes --enable-parallel --enable-shared CFLAGS="-O3 -fPIC -Wno-incompatible-pointer-types-discards-qualifiers -Wno-non-literal-null-conversion -Wno-int-conversion -Wno-implicit-int -Wno-implicit-function-declaration -Wno-incompatible-function-pointer-types" FCFLAGS="-O3 -fPIC" LDFLAGS="-Wl,--build-id"' package/hdf5/1.10.1/clang/install.sh
./jarvis -install package/hdf5/1.10.1/clang/ bisheng+mpi
export CC=clang  CXX=clang++ FC=flang F77=flang
./jarvis -install package/blitz/1.0.1 bisheng
module load blitz/1.0.1
export CC=mpicc CXX=mpicxx FC=mpifort
./jarvis -install package/pnetcdf/1.12.1 bisheng+mpi
module load hdf5-clang/1.10.1
module load pnetcdf/1.12.1
./jarvis -install package/netcdf/4.7.4/clang  bisheng+mpi
module load netcdf-clang/4.7.4
sed -i '5c cp -r /mnt/xios-1.0/* $1' package/xios/1.0/install.sh
./jarvis -install package/xios/1.0 bisheng+mpi




[ENV]
module use software/moduledeps/bisheng4.0.0
module use software/moduledeps/bisheng4.0.0-hmpi2.4.1
module load pnetcdf/1.12.1 hdf5-clang/1.10.1  netcdf-clang/4.7.4  blitz/1.0.1  xios/1.0
export CC=mpicc CXX=mpicxx FC=mpifort
export PATH=$JARVIS_ROOT/NEMO/releases/release-3.6/NEMOGCM/CONFIG/MY_AMM12/BLD/bin:$JARVIS_ROOT/NEMO/releases/release-3.6/NEMOGCM/CONFIG/MY_AMM12/EXP00:$PATH

[APP]
app_name = nemo
build_dir = $JARVIS_ROOT
binary_dir = $JARVIS_ROOT/NEMO/releases/release-3.6/NEMOGCM/CONFIG/MY_AMM12/EXP00
case_dir = 

[BUILD]
set -x
cd $JARVIS_ROOT
rm -rf NEMO
unzip ${JARVIS_DOWNLOAD}/NEMO_releases_release-3.6-15813.zip
cd NEMO/releases/release-3.6/NEMOGCM
export NETCDF=`nc-config --prefix`
export HDF5=`which h5diff`
export HDF5=${HDF5%/*/*}
export XIOS=$XIOS_PATH

echo "export NETCDF_DIR=${NETCDF}" >> nemo-env.sh
echo "export HDF_DIR=${HDF5}" >> nemo-env.sh
echo "export XIOS_DIR=${XIOS}" >> nemo-env.sh
source nemo-env.sh

cat << \EOF > ARCH/arch-aarch64_gnu.fcm
#generic gfortran compiler options for linux
#NCDF_INC    netcdf include file
#NCDF_LIB    netcdf library
#FC          Fortran compiler command
#FCFLAGS     Fortran compiler flags
#FFLAGS      Fortran 77 compiler flags
#LD          linker
#LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
#FPPFLAGS    pre-processing flags
#AR          assembler
#ARFLAGS     assembler flags
#MK          make
#USER_INC    additional include files for the compiler,  e.g. -I<include dir>
#USER_LIB    additional libraries to pass to the linker, e.g. -l<library>
#CC          C compiler used to compile conv for AGRIF
#CFLAGS      compiler flags used with CC
#
#Note that:
# - unix variables "$..." are accepted and will be evaluated before calling fcm.
# - fcm variables are starting with a % (and not a $)
%NCDF_HOME           $NETCDF_DIR
%HDF5_HOME           $HDF_DIR
%XIOS_HOME           $XIOS_DIR
%NCDF_INC            -I%NCDF_HOME/include -I%HDF5_HOME/include
%NCDF_LIB            -L%HDF5_HOME/lib -L/%NCDF_HOME/lib -lnetcdf -lnetcdff
%XIOS_INC            -I%XIOS_HOME/inc
%XIOS_LIB            -L%XIOS_HOME/lib -lxios
%CPP                 cpp
%FC                  mpifort
%FCFLAGS             -cpp -r8 -O3 -mcpu=native
%FFLAGS              %FCFLAGS
%LD                  mpif90
%LDFLAGS             -lstdc++
%FPPFLAGS            -P -C -traditional
%AR                  ar
%ARFLAGS             rs
%MK                  gmake
%USER_INC            %XIOS_INC %NCDF_INC
%USER_LIB            %XIOS_LIB %NCDF_LIB
%CC                  clang
%CFLAGS              -O0 -mcpu=linxicore9100  -mllvm -force-customized-pipeline=true
EOF

chmod 777 ./ -R
cd ./CONFIG/
./makenemo -m aarch64_gnu -j 32  -r AMM12 -n 'MY_AMM12' add_key "key_nosignedzero"

[CLEAN]
./clean_build

[RUN]
run =
binary =
nodes = 1
