[SERVER]
11.11.11.11

[DOWNLOAD]
OpenBabel/3.1.1 https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.tar.gz
boost/1.72.0 https://nchc.dl.sourceforge.net/project/boost/boost/1.72.0/boost_1_72_0.tar.bz2

[DEPENDENCY]
set -e
set -x

yum install zlib-devel git cmake make git vim tar time glibc-headers gcc-c++ -y 
./jarvis -install hpckit/2024.12.30 any
module use software/utils/hpckit/2024.12.30/HPCKit/24.12.30/modulefiles
module purge
module add bisheng/compiler4.1.0/bishengmodule bisheng/hmpi2.4.3/hmpi
export CC=`which clang`
export CXX=`which clang++`
export FC=`which flang`
tar -xf ${JARVIS_DOWNLOAD}/boost_1_72_0.tar.bz2
tar -vzxf ${JARVIS_DOWNLOAD}/openbabel-3-1-1.tar.gz
mkdir -p boost/1_72_0
cd boost_1_72_0/
sed -i "60c #ifdef PTHREAD_STACK_MIN" boost/thread/pthread/thread_data.hpp
sed -i "61c \\\tif (size<static_cast<std::size_t>(PTHREAD_STACK_MIN)) size=PTHREAD_STACK_MIN;" boost/thread/pthread/thread_data.hpp
sed -i "59c #if 1" boost/mpl/aux_/integral_wrapper.hpp
./bootstrap.sh --with-toolset=clang --prefix=${JARVIS_ROOT}/boost/1_72_0
sed -i '$ a\using mpi : mpicxx ;' project-config.jam
./b2 install --prefix=${JARVIS_ROOT}/boost/1_72_0 toolset=clang
export Boost_INCLUDE_PATH=${JARVIS_ROOT}/boost/1_72_0/include


[ENV]
module use software/utils/hpckit/2024.12.30/HPCKit/24.12.30/modulefiles
module purge
module add bisheng/compiler4.1.0/bishengmodule bisheng/hmpi2.4.3/hmpi
export CC=`which clang`
export CXX=`which clang++`
export FC=`which flang`

[APP]
app_name = OpenBabel
build_dir = ${JARVIS_ROOT}/openbabel-openbabel-3-1-1/
binary_dir = ${JARVIS_ROOT}/openbabel-3.1.1-install/bin/
case_dir = ${JARVIS_ROOT}/openbabel-openbabel-3-1-1/test/files

[BUILD]
wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz
tar xvf eigen-3.4.0.tar.gz
mkdir build
cd build
cmake .. -DEIGEN3_INCLUDE_DIR=${JARVIS_ROOT}/openbabel-openbabel-3-1-1/eigen-3.4.0 -DBoost_INCLUDE_DIR=${Boost_INCLUDE_PATH} -DCMAKE_INSTALL_PREFIX=${JARVIS_ROOT}/openbabel-3.1.1-install
make -j
make install

[CLEAN]
make clean

[RUN]
run = time -p
binary = obabel -i cif *.cif -o cif
nodes = 1

[PERF]
perf= 
nsys=
ncu=--target-processes all
