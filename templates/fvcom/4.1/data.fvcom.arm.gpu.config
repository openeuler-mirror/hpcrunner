[SERVER]
11.11.11.11

[DOWNLOAD]
FVCOM/4.1 https://github.com/yejianbang/fvcom/releases/download/v4.1/fvcom-4.1.tar.gz
metis_patch/4.0 https://www.math-linux.com/IMG/patch/metis-4.0.patch

[DEPENDENCY]

module use ./software/modulefiles
module purge
./jarvis -install bisheng/2.1.0 com
module load bisheng/2.1.0
export CC=clang CXX=clang++ FC=flang
./jarvis -install hmpi/1.1.1 clang
module use software/moduledeps/bisheng2.1.0
module load hmpi/1.1.1
export CC=mpicc CXX=mpicxx FC=mpifort
./jarvis -install hdf5/1.10.1/clang clang+mpi
module use software/moduledeps/bisheng2.1.0-hmpi1.1.1
module load hdf5-clang/1.10.1
./jarvis -install pnetcdf/1.11.2 clang+mpi
module load pnetcdf/1.11.2
./jarvis -install netcdf/4.7.0/clang clang+mpi
module load netcdf-clang/4.7.0

[ENV]
module use ./software/modulefiles
module purge
module load bisheng/2.1.0
export CC=clang CXX=clang++ FC=flang
module use software/moduledeps/bisheng2.1.0
module load hmpi/1.1.1
export CC=mpicc CXX=mpicxx FC=mpifort
module use software/moduledeps/bisheng2.1.0-hmpi1.1.1
module load hdf5-clang/1.10.1
module load pnetcdf/1.11.2
module load netcdf-clang/4.7.0

[APP]
app_name = fvcom
build_dir = $JARVIS_ROOT
binary_dir = $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/fvcom
case_dir = $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/fvcom

[BUILD]
set -x
set -e

mkdir -p $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/fvcom
rm -rf $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/fvcom/*
cd $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/fvcom
tar -xvf ${JARVIS_DOWNLOAD}/fvcom-4.1.tar.gz
cp ${JARVIS_DOWNLOAD}/metis-4.0.patch  FVCOM4.1/METIS_source/

cd FVCOM4.1
cp Examples/Estuary/make.inc_example FVCOM_source/make.inc

fvcom_path=`pwd`
sed -i "51s%$%${fvcom_path}/FVCOM_source%g"   FVCOM_source/make.inc
sed -i '73c LIBDIR=-L$(INSTALLDIR)/lib -L../METIS_source/metis -L./libs/julian'  FVCOM_source/make.inc
sed -i '74c INCDIR=-I$(INSTALLDIR)/include -I../METIS_source/metis -I./libs/julian'  FVCOM_source/make.inc


hdf5_path=`which h5diff`
hdf5_path=${hdf5_path%/*/*}
netcdf_path=`nc-config --prefix`
bisheng_path=`which clang`
bisheng_path=${bisheng_path%/*/*}

sed -i "97c IOLIBS=-L${netcdf_path}/lib -L${hdf5_path}/lib -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -lz -lcurl -lm"  FVCOM_source/make.inc
sed -i "99c IOINCS=-I${netcdf_path}/include -I${hdf5_path}/include"  FVCOM_source/make.inc
sed -i "534,539s/^/#/g" FVCOM_source/make.inc
#sed -i "554i CPP      = ${bisheng_path}/bin/clang-cpp\nCOMPILER = -DGFORTRAN \nCC       = mpicc \nCXX      = mpicxx \nFC       = mpif90 \nDEBFLGS  = \nOPT      = -O3  -ffree-form -ffree-line-length-none \nCLIB     =" FVCOM_source/make.inc
sed -i "554i CPP      = /usr/bin/cpp\nCOMPILER = -DGFORTRAN \nCC       = mpicc \nCXX      = mpicxx \nFC       = mpif90 \nDEBFLGS  = \nOPT      = -O3  -ffree-form -ffree-line-length-none \nCLIB     =" FVCOM_source/make.inc

ln -sf FVCOM_source/make.inc ./

#编译METIS
cd ./METIS_source
tar -zxvf metis.tgz
cd metis
patch -p2 < ../metis-4.0.patch
mkdir -p ../../FVCOM_source/libs/install/lib
mkdir -p ../../FVCOM_source/libs/install/include
mkdir -p ../../FVCOM_source/libs/install/bin
make -j
make install

#编译julian
cd ../../FVCOM_source/libs
tar -zxvf julian.tgz
cd julian
make -j
make install


cd ../..
sed -i "51c Character( Len = 256 ) Function N_Fmt( c , n ) \n    Character( Len = * ) , Intent( IN ) :: c \n    Integer , Intent( IN ) :: n \n    integer :: i , j \n    character( len = 16 ) :: cn \n    i = index( c , '<' ) \n    j = index( c , '>' ) \n    write( cn , '(g0)' ) n \n    N_Fmt = c(:i-1) // Trim(adjustL(cn)) // c(j+1:) \n  End Function N_Fmt" mod_newinp.F

sed -i "352c write(*,N_Fmt('(A20,<size>F10.4)',SIZE))trim(argname)//': ',fval(1:SIZE)" mod_newinp.F
sed -i "421c write(*,N_Fmt('(A20,<size>I10)',SIZE))trim(argname)//': ',ival(1:SIZE)" mod_newinp.F
sed -i "494c write(*,N_Fmt('(A20,<size>L10)',SIZE))trim(argname)//': ',cval(1:SIZE)" mod_newinp.F
sed -i "567c write(*,N_Fmt('(A20,<size>A10)',SIZE))trim(argname)//': ',sval(1:SIZE)" mod_newinp.F

sed -i 's/\/=\.TRUE\./\.neqv\.\.TRUE\./g' mod_scal.F
sed -i 's/==\.TRUE/\.eqv\.\.TRUE/g' internal_step.F
sed -i 's/==\.FALSE\./\.eqv\.\.FALSE\./g' adv_t.F
sed -i 's/==\.FALSE\./\.eqv\.\.FALSE\./g' adv_s.F

make

[CLEAN]
./clean_build

[RUN]
run =
binary =
nodes = 1
