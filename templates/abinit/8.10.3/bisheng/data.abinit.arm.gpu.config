[SERVER]
11.11.11.11

[DOWNLOAD]
abinit/8.10.3 https://www.abinit.org/sites/default/files/packages/abinit-8.10.3.tar.gz
atompaw/4.0.1.0 http://forge.abinit.org/fallbacks/atompaw-4.0.1.0.tar.gz
bigdft/1.7.1.25 http://forge.abinit.org/fallbacks/bigdft-1.7.1.25.tar.gz
libxc/3.0.0 http://forge.abinit.org/fallbacks/libxc-3.0.0.tar.gz
wannier90/2.0.1.1 http://forge.abinit.org/fallbacks/wannier90-2.0.1.1.tar.gz
abinit_package $JARVIS_PROXY/abinit/abinit/files/3586400/0001-Patching-m_polynomial_coeff.F90-for-ability-to-compi.patch.txt abinit_patch-8.10.3.patch

[DEPENDENCY]
module use ./software/modulefiles
module purge
./jarvis -install bisheng/2.1.0 com
module load bisheng/2.1.0
export CC=clang CXX=clang++ FC=flang
./jarvis -install package/openblas/0.3.18 clang
./jarvis -install hmpi/1.1.1 clang
module load hmpi/1.1.1
export CC=mpicc CXX=mpicxx FC=mpifort
./jarvis -install package/hdf5/1.10.1/clang clang+mpi
./jarvis -install package/pnetcdf/1.11.2 clang+mpi
module load hdf5-clang/1.10.1
module load pnetcdf/1.11.2
./jarvis -install package/netcdf/4.7.0/clang clang+mpi


[ENV]
module use ./software/modulefiles
module purge
#module load kgcc/9.3.1
module load bisheng/2.1.0
module load hmpi/1.1.1
module load hdf5-clang/1.10.1  
module load pnetcdf/1.11.2   
module load netcdf-clang/4.7.0
module load openblas/0.3.18
export CC=mpicc CXX=mpicxx FC=mpifort

[APP]
app_name = abinit
build_dir = $JARVIS_ROOT
binary_dir = $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/abinit
case_dir = $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/abinit

[BUILD]
set -x
set -e

#mkdir -p $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/abinit
#rm -rf $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/abinit/*
#cd $JARVIS_ROOT/software/apps/bisheng2.1.0/hmpi1.1.1/abinit

cd ${JARVIS_TMP}
#ABINIT_INSTALL_DIR="$JARVIS_ROOT/software/apps/kgcc9.3.1/hmpi1.1.1/abinit/"

MPI_HOME=`which mpicc`
MPI_HOME=${MPI_HOME%/*/*}


hdf5_path=`which h5diff`
hdf5_path=${hdf5_path%/*/*}
netcdf_path=`nc-config --prefix`
pnetcdf_path=`pnetcdf-config --prefix`

array=(${LD_LIBRARY_PATH//:/ })
for var in ${array[@]}
do
   if [[ $var =~ "openblas" ]];then
           openblas_path=${var%/*}
   fi
done


export CPPFLAGS=" -I${hdf5_path}/include -I${pnetcdf_path}/include -I${netcdf_path}/include -I$MPI_HOME/include"

export CFLAGS=" -I${hdf5_path}/include -I${pnetcdf_path}/include -I${netcdf_path}/include -I$MPI_HOME/include "

export CXXFLAGS=" -I${hdf5_path}/include -I${pnetcdf_path}/include -I${netcdf_path}/include -I$MPI_HOME/include "

export FCFLAGS=" -I${hdf5_path}/include -I${pnetcdf_path}/include"

export FFLAGS=" -I${hdf5_path}/include -I${pnetcdf_path}/include"

export LDFLAGS=" -L${hdf5_path}/lib -L${pnetcdf_path}/lib -L${netcdf_path}/lib"

rm -rf abinit-8.10.3
tar -zxvf $JARVIS_DOWNLOAD/abinit-8.10.3.tar.gz
cd abinit-8.10.3
temp_path=`pwd`

sed -i "16443a generic)\\n       abi_fc_vendor_hnt=\"generic\"\\n       abi_fc_version_hnt=\"default\"\\n       abi_sys_spec_hnt=\"default\"\\n       FCFLAGS_32BITS='-m32'\\n       FCFLAGS_64BITS='-m64'\\n       FCFLAGS_BIGENDIAN='-fconvert=big-endian -frecord-marker=4'\\n       FCFLAGS_FIXEDFORM='-ffixed-form'\\n       FCFLAGS_FREEFORM='-ffree-form'\\n       FCFLAGS_PIC='-fPIC'\\n       FCFLAGS_MODDIR='-J\$(abinit_moddir)'\\n       FCFLAGS_HINTS='-ffree-line-length-none'\\n       FCFLAGS_OPENMP='-fopenmp'\\n       ;;" configure

sed -i '21618s/#define HAVE_FC_INT_QUAD 1//g' configure

#cp $JARVIS_DOWNLOAD/abinit_patch-8.10.3.patch  ./
#cd ./src
#patch -p2 < ../abinit_patch-8.10.3.patch
#cd ..

mkdir extral
cd extral
cp $JARVIS_DOWNLOAD/atompaw-4.0.1.0.tar.gz ./
cp $JARVIS_DOWNLOAD/bigdft-1.7.1.25.tar.gz ./
cp $JARVIS_DOWNLOAD/libxc-3.0.0.tar.gz ./
cp $JARVIS_DOWNLOAD/wannier90-2.0.1.1.tar.gz ./
cd ..
mkdir build
cd build
../configure FC=mpif90 --enable-mpi --with-mpi-prefix=$MPI_HOME --with-dft-flavor="libxc+atompaw" --with-trio-flavor="netcdf" --with-tardir=$temp_path/extral --with-netcdf-incs="-I${netcdf_path}/include" --with-netcdf-libs="-L${netcdf_path}/lib -lnetcdf -L${netcdf_path}/lib -lnetcdff" FCFLAGS="-g -O2 -ffree-line-length-none" --with-linalg-libs="-L${openblas_path}/ -lblas -llapack" 

FC=mpif90 CC=mpicc CXX=mpicxx make multi multi_nprocs=96


[CLEAN]
./clean_build

[RUN]
run =
binary =
nodes = 1
