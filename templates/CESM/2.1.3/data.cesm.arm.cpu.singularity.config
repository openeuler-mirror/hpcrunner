[SERVER]
11.11.11.11

[DEPENDENCY]
set -x
set -e
. $CHECK_ROOT && yum install -y perl-XML-LibXML time.aarch64 patch
module purge
module use ./software/modulefiles
./jarvis -install bisheng/3.2.0-mini com
module load bisheng/3.2.0-mini
export CC=clang CXX=clang++ FC=flang
./jarvis -install openblas/0.3.18 clang
./jarvis -install hmpi/2.3.0 bisheng
module use ./software/moduledeps/bisheng3.2.0
module load hmpi/2.3.0
export CC=mpicc CXX=mpicxx FC=mpifort F77=mpifort
./jarvis -install hdf5/1.12.0/clang clang+mpi
module load hdf5-clang/1.12.0
./jarvis -install pnetcdf/1.12.1 clang+mpi
module load pnetcdf/1.12.1
./jarvis -install netcdf/4.8.1/clang clang+mpi
./jarvis -install kml/2.2.0/bisheng bisheng
ln -sf /usr/bin/python3 /usr/bin/python

[ENV]
module purge
module use /hpcrunner/software/modulefiles
module load bisheng/3.2.0-mini
module use /hpcrunner/software/moduledeps/bisheng3.2.0
module load hmpi/2.3.0
module load hdf5-clang/1.12.0
module load pnetcdf/1.12.1
module load netcdf-clang/4.8.1
module load openblas/0.3.18
module load kml-bisheng/2.2.0
export LD_LIBRARY_PATH=$KML_BISHENG_PATH/lib/kblas/omp:$LD_LIBRARY_PATH
export NETCDF_PATH=${NETCDF_CLANG_PATH}
export CESM_PATH=/hpcrunner/CESM-release-cesm2.1.3
export CIMEROOT=$CESM_PATH/cime
export PYTHONPATH=$CIMEROOT/scripts/lib:$CIMEROOT/scripts/Tools:$PYTHONPATH
export case_name_1=f19_g16_1node
export case_name_2=f19_g16_2nodes

[APP]
app_name = CESM
build_dir = $CESM_PATH
binary_dir = 
case_dir = $CESM_PATH/cime/scripts/$case_name_1

[BUILD]
set -e
set -x
cd /hpcrunner
./jarvis -e
source ./env.sh
tar -zxvf /mnt/CESM-release-cesm2.1.3.src.tgz -C /hpcrunner
tar -zxvf /mnt/cesm.inputdata.tgz -C $CESM_PATH/
cd ${CESM_PATH}
patch -p1 < /hpcrunner/templates/CESM/2.1.3/CESM-2.1.3.patch
cd $CIMEROOT/scripts
if [ ! -d $case_name_1 ]; then
    ./create_newcase --case $case_name_1 --compset X --res f19_g16 --mach openeuler --compiler gnu
fi
cd ${case_name_1}
./case.setup
./xmlchange STOP_N=300
./case.setup --reset
./case.build --skip-provenance-check

cd $CIMEROOT/scripts
if [ ! -d $case_name_2 ]; then
    ./create_newcase --case $case_name_2 --compset X --res f19_g16 --mach openeuler --compiler gnu
fi
cd ${case_name_2}
./case.setup
./xmlchange NTASKS=256,STOP_N=300
./case.setup --reset
./case.build --skip-provenance-check

[CLEAN]
cd $CIMEROOT/scripts/$case_name_1
./case.build --clean-all
cd $CIMEROOT/scripts/$case_name_2
./case.build --clean-all

[RUN]
#run = rm -rf cesm_* && chmod +x run.sh && dsub -s run.sh
run = ./case.submit
binary =
nodes = 1

[BATCH]
#! /bin/bash