[SERVER]
1.1.1.1

[DOWNLOAD]
qe/6.8 $JARVIS_PROXY/QEF/q-e/archive/refs/tags/qe-6.8.tar.gz

[DEPENDENCY]
set -x
set -e
./jarvis -install kgcc/9.3.1 com
module purge
module use ./software/modulefiles
module load kgcc/9.3.1
export CC=`which gcc`
export CXX=`which g++`
export FC=`which gfortran`
./jarvis -install kml/1.5.0/gcc gcc
# use openmpi4 instead of default openmpi3
cd /opt/nvidia/hpc_sdk/Linux_aarch64/21.9/comm_libs/
rm -rf mpi
ln -s openmpi4/openmpi-4.0.5 mpi

[ENV]
module purge
./jarvis -install fftw/3.3.10 gcc
export PATH=/usr/local/cuda-11.4/bin/:$PATH
module use /opt/nvidia/hpc_sdk/modulefiles/
module load nvhpc/21.9

module use ./software/modulefiles
module load kgcc/9.3.1
source /etc/profile
module load kfft/1.0.0
# add BLAS\Lapack
export BLAS_LIBS="-I/usr/local/kml/include -L/usr/local/kml/lib/kblas/omp -lkblas"
export LAPACK_LIBS="-L/usr/local/kml/lib -lklapack_full"
export FFT_LIBS="-I${FFTW_PATH}/include -L${KFFT_PATH}/lib -lfftw3 -lfftw3f"
# add MPI
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/nvidia/hpc_sdk/Linux_aarch64/21.9/comm_libs/openmpi4/openmpi-4.0.5/lib/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/nvidia/hpc_sdk/Linux_aarch64/21.9/compilers/lib/
export LD_LIBRARY_PATH=${JARVIS_ROOT}/software/libs/gcc9/kml/1.4.0/kfft/:$LD_LIBRARY_PATH
if ! nvidia-cuda-mps-control -d; then
    echo "ERROR: Failed to start MPS daemon. Please resolve issue or set GPU_WORKERS to 1"
    exit 1
fi
echo "INFO: MPS server daemon started"
trap "echo quit | nvidia-cuda-mps-control" EXIT

[APP]
app_name = QE
build_dir = ${JARVIS_ROOT}/q-e-qe-6.8-opt/
binary_dir = ${JARVIS_ROOT}/q-e-qe-6.8-opt/bin/
case_dir = ${JARVIS_ROOT}/workloads/QE/qe-large/

[BUILD]
# install devicexlib
cd external
rm -rf devxlib/*
tar xzf devicexlib-master.tar.gz -C devxlib --strip-components=1
cd devxlib
./configure FC=pgf90 CC=pgcc --with-cuda=yes --with-cuda-cc=80 --with-cuda-runtime=11.4 --disable-parallel --enable-cuda-env-check=no
make all
cd ../../
#add patch here
# patch -fp0 < xx.patch
./configure --with-cuda=yes --with-cuda-runtime=11.4 --with-cuda-cc=80  --enable-openmp --with-scalapack=no
echo DFLAGS += -D__FFTW3 -D__GPU_MPI >> make.inc
echo LD_LIBS += -lcurand -lcufft >> make.inc
echo CUDA_F90FLAGS += -Mipa -Munroll -Mvect -fma -use_fast_math -O4 >> make.inc
echo FFLAGS += -O3 >> make.inc
make pw -j 64

[CLEAN]
make clean

[RUN]
run = mpirun --allow-run-as-root -np 8 -x CUDA_VISIBLE_DEVICES=0,2 -x OMP_NUM_THREADS=1
binary = pw.x -nk 8 -input scf.in
nodes = 1