[SERVER]
1.1.11.1

[DOWNLOAD]
NAMD/2.14 https://www.ks.uiuc.edu/Research/namd/2.14/download/946183/NAMD_2.14_Source.tar.gz
charm/6.10.2 http://charm.cs.illinois.edu/distrib/charm-6.10.2.tar.gz
cuda/11.4.0 https://developer.download.nvidia.com/compute/cuda/11.4.0/local_installers/cuda_11.4.0_470.42.01_linux_sbsa.run
tcl/8.5.9 http://www.ks.uiuc.edu/Research/namd/libraries/tcl8.5.9-linux-arm64-threaded.tar.gz

[DEPENDENCY]
yum install -y fftw-devel tcl-devel 
module use ./software/modulefiles
module purge
./jarvis -install bisheng/2.1.0 com
module load bisheng/2.1.0
export CC=clang CXX=clang++ FC=flang
./jarvis -install hmpi/1.1.1 clang
module use ./software/moduledeps/bisheng2.1.0
module load hmpi/1.1.1
./jarvis -install fftw/3.3.8 clang+mpi
module use ./software/moduledeps/bisheng2.1.0-hmpi1.1.1
module load fftw/3.3.8
#tar xzf $JARVIS_DOWNLOAD/NAMD_2.14_Source.tar.gz
#cd NAMD_2.14_Source
rm -rf NAMD-2.13
mkdir NAMD-2.14
#tar xf charm-6.10.2.tar
# 1. 添加执行权限
sudo chmod +x ${JARVIS_DOWNLOAD}/cuda_11.4.0_470.42.01_linux_sbsa.run
# 2. 静默安装
sudo sh ${JARVIS_DOWNLOAD}/cuda_11.4.0_470.42.01_linux_sbsa.run \
  --silent \
  --toolkit \
  --override \
  --no-opengl-libs \
  --no-man-page \
  --no-drm \
  --installpath=/usr/local/cuda \
  --toolkitpath=/usr/local/cuda \
  --samplespath=/usr/local/cuda/samples

[ENV]
module use ./software/modulefiles
module purge
module load bisheng/2.1.0
module use ./software/moduledeps/bisheng2.1.0
module load hmpi/1.1.1
module use ./software/moduledeps/bisheng2.1.0-hmpi1.1.1
module load fftw/3.3.8
export CC=clang CXX=clang++ FC=flang
export PATH=/usr/local/cuda/bin:$PATH

[APP]
app_name = NAMD
build_dir = $JARVIS_ROOT/NAMD-2.14/
binary_dir = $JARVIS_ROOT/NAMD-2.14/build/NAMD_2.14_Source/Linux-ARM64-g++
binary_dir =
case_dir = ${JARVIS_ROOT}/workloads/namd/stmv

[BUILD]
set -x
set -e

rm -rf build
rm -rf install
mkdir build install
export BUILD_DIR=$JARVIS_ROOT/NAMD-2.14/build
export INSTALL_DIR=$JARVIS_ROOT/NAMD-2.14/install
cd $JARVIS_ROOT/NAMD-2.14/build
tar -xvf $JARVIS_DOWNLOAD/charm-6.10.2.tar.gz
cd charm-v6.10.2
mkdir ${INSTALL_DIR}/charm690/
cp src/arch/mpi-linux-x86_64 src/arch/mpi-linux-arm8 -rf
grep -rl 'm64' src/arch/mpi-linux-arm8 | xargs sed -i 's/\-m64//g'
./build charm++ mpi-linux-arm8 smp --with-production --destination=$JARVIS_ROOT/NAMD-2.14/install/charm690/mpi-linux-arm8

cd $BUILD_DIR
tar xzf $JARVIS_DOWNLOAD/NAMD_2.14_Source.tar.gz
cd NAMD_2.14_Source
cp arch/Linux-x86_64.fftw3 arch/Linux-ARM64.fftw3
cd $JARVIS_ROOT/NAMD-2.14/
tar -xzvf $JARVIS_DOWNLOAD/tcl8.5.9-linux-arm64-threaded.tar.gz
cd $BUILD_DIR/NAMD_2.14_Source
sed -i "s|^CHARMBASE[[:space:]]*=.*|CHARMBASE = $INSTALL_DIR/charm690|" Make.charm

cd $BUILD_DIR/NAMD_2.14_Source
sed -i '1,$d' arch/Linux-ARM64-g++.arch
cat <<EOF >> "arch/Linux-ARM64-g++.arch"
NAMD_ARCH = Linux-ARM64
CHARMARCH = mpi-linux-arm8
#FLOATOPTS = -O2 -ffast-math -funsafe-math-optimizations -fomit-frame-pointer -mcpu=cortex-a9 -mtune=cortex-a9
FLOATOPTS = -O2 -ffast-math -funsafe-math-optimizations -fomit-frame-pointer
CXX = clang++
CXXOPTS = \$(FLOATOPTS)
CXXNOALIASOPTS = \$(FLOATOPTS) -fno-strict-aliasing
CC = clang
COPTS = \$(FLOATOPTS)
EOF
./config Linux-ARM64-g++ --with-fftw3 --fftw-prefix $FFTW_PATH --with-tcl --tcl-prefix $JARVIS_ROOT/NAMD-2.14/tcl8.5.9-linux-arm64-threaded --charm-arch mpi-linux-arm8
cd Linux-ARM64-g++
make

[CLEAN]
make clean

[RUN]
run =
binary = namd2 +p126 +setcpuaffinity +maffinity +isomalloc_sync +devices 0,1 stmv_nve_cuda.namd
nodes = 1

[PERF]
kperf = --spe --uncore
perf =
nsys = -y 5s -d 60s
ncu = --target-processes all --launch-skip 16 --launch-count 1
