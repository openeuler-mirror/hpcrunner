[SERVER]
11.11.11.11

[DOWNLOAD]
namd/2.13 https://www.ks.uiuc.edu/Research/namd/2.13/download/412487/NAMD_2.13_Source.tar.gz
tcl/8.5   http://www.ks.uiuc.edu/Research/namd/libraries/tcl8.5.9-linux-arm64-threaded.tar.gz

[DEPENDENCY]
./jarvis -install package/hpckit/24.0.0/ any
module use software/utils/hpckit/24.0.0/HPCKit/24.12.30/modulefiles
module purge
module load bisheng/compiler4.1.0/bishengmodule bisheng/hmpi2.4.3/hmpi

export CC=mpicc FC=mpifort CXX=mpicxx

./jarvis -install package/fftw/3.3.8 bisheng+mpi
module use ${JARVIS_ROOT}/software/moduledeps/bisheng4.1.0-hmpi2.4.3/
module load fftw/3.3.8

[ENV]
module use ${JARVIS_ROOT}/software/utils/hpckit/24.0.0/HPCKit/24.12.30/modulefiles
module purge
module load bisheng/compiler4.1.0/bishengmodule bisheng/hmpi2.4.3/hmpi
module use ${JARVIS_ROOT}/software/moduledeps/bisheng4.1.0-hmpi2.4.3/
module load fftw/3.3.8
export PATH=$JARVIS_ROOT/software/apps/bisheng4.1.0-hmpi2.4.3/namd/Linux-ARM64-clang:$PATH

[APP]
app_name = namd
build_dir = $JARVIS_ROOT/software/apps/bisheng4.1.0-hmpi2.4.3/namd
binary_dir = $JARVIS_ROOT/software/apps/bisheng4.1.0-hmpi2.4.3/namd/Linux-ARM64-${CXX}
case_dir = ${JARVIS_TMP}/stmv

[BUILD]
set -x
export CC=mpicc FC=mpifort CXX=mpicxx
mkdir -p ${JARVIS_ROOT}/software/apps/bisheng4.1.0-hmpi2.4.3/namd
cd ${JARVIS_ROOT}/software/apps/bisheng4.1.0-hmpi2.4.3/namd
rm -rf ${JARVIS_ROOT}/software/apps/bisheng4.1.0-hmpi2.4.3/namd/*
tar -xf ${JARVIS_DOWNLOAD}/NAMD_2.13_Source.tar.gz
export installdir=${JARVIS_ROOT}/software/apps/bisheng4.1.0-hmpi2.4.3/namd
export sourcedir=${JARVIS_ROOT}/software/apps/bisheng4.1.0-hmpi2.4.3/namd/NAMD_2.13_Source
cd ${JARVIS_ROOT}/software/apps/bisheng4.1.0-hmpi2.4.3/namd/NAMD_2.13_Source

#安装charm-6.10.2.tar
tar -xvf charm-6.8.2.tar
cd charm-6.8.2

sed -i '8a CMK_CC_FLAGS="-Wno-unused-command-line-argument"'  src/arch/common/cc-clang.sh
sed -i '9a CMK_CXX_FLAGS="-Wno-unused-command-line-argument"' src/arch/common/cc-clang.sh
cp src/arch/mpi-linux-x86_64 src/arch/mpi-linux-arm8 -rf
grep -rl 'm64' src/arch/mpi-linux-arm8 | xargs sed -i 's/\-m64//g'
./build charm++ mpi-linux-arm8 smp --with-production

#安装tcl
mkdir -p ${installdir}/tcl_install
cd ${installdir}/tcl_install
tar -xf ${JARVIS_DOWNLOAD}/tcl8.5.9-linux-arm64-threaded.tar.gz
echo "Install is success install_dir: $installdir/tcl_install"

export PATH=$PATH:$installdir/tcl_install/tcl8.5.9-linux-arm64-threaded/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$installdir/tcl8.5.9-linux-arm64-threaded/lib
export INCLUDE=$INCLUDE:$installdir/tcl8.5.9-linux-arm64-threaded/include
export TCL_DIR=$installdir/tcl_install/tcl8.5.9-linux-arm64-threaded


#安装NAMD
cd $sourcedir

#修改配置文件
rm -rf ./arch/Linux-ARM64.tcl ./arch/Linux-ARM64.fftw3

#func_fftw3_info
cat > ./arch/Linux-ARM64.fftw3 <<EOF
FFTDIR=$FFTW_PATH
FFTINCL=-I\$(FFTDIR)/include
FFTLIB=-L\$(FFTDIR)/lib -lfftw3f
FFTFLAGS=-DNAMD_FFTW -DNAMD_FFTW_3
FFT=\$(FFTINCL) \$(FFTFLAGS)

EOF

cat ./arch/Linux-ARM64.fftw3

#func_tcl_info
cat > ./arch/Linux-ARM64.tcl <<EOF

TCLDIR=$TCL_DIR
TCLINCL=-I\$(TCLDIR)/include
#TCLLIB=-L\$(TCLDIR)/lib -ltcl8.5 -ldl
TCLLIB=-L\$(TCLDIR)/lib -ltcl8.5 -ldl -lpthread
TCLFLAGS=-DNAMD_TCL
TCL=\$(TCLINCL) \$(TCLFLAGS)
EOF

cat ./arch/Linux-ARM64.tcl

cat > ./arch/Linux-ARM64-${CXX}.arch <<EOF
NAMD_ARCH = Linux-ARM64
CHARMARCH = mpi-linux-arm8

#FLOATOPTS = -O2 -ffast-math -funsafe-math-optimizations -fomit-frame-pointer -march=armv7-a -mcpu=cortex-a9 -mtune=cortex-a9
FLOATOPTS = -O2 -ffast-math -funsafe-math-optimizations -fomit-frame-pointer -march=armv8-a -Wno-implicit-function-declaration -Wno-implicit-int

CXX = $CXX -std=c++11 -Wno-implicit-function-declaration -Wno-implicit-int
CXXOPTS = \$(FLOATOPTS)
CXXNOALIASOPTS = \$(FLOATOPTS) -fno-strict-aliasing

CC = $CC
COPTS = \$(FLOATOPTS)
EOF

cat ./arch/Linux-ARM64-${CXX}.arch



./config Linux-ARM64-${CXX} --with-fftw --fftw-prefix ${FFTW_PATH} --with-tcl --tcl-prefix ${TCL_DIR} --charm-arch mpi-linux-arm8-smp
cd Linux-ARM64-${CXX}
make -j4

echo "Install is success install_dir: $installdir"


[CLEAN]
rm -rf $JARVIS_ROOT/software/apps/bisheng4.1.0-hmpi2.4.3/namd

[RUN]
run =   
binary = 
nodes = 

[BATCH]
#定义日志文件
LOG_FILE="namd-run.log"

>"$LOG_FILE"
$RUN_TOOL "namd " "time -p mpirun --allow-run-as-root -np 1 namd2 +ppn 127 ${test_name}.namd +setcpuaffinity" $LOG_FILE
#time -p mpirun --allow-run-as-root -np 1 namd2 +ppn 127 ${test_name}.namd +setcpuaffinity)

echo "All commands executed. Performance log saved to $LOG_FILE"

[JOB]
#!/bin/sh
#DSUB -n namd_test
#DSUB --mpi hmpi
#DSUB -q default
#DSUB -N 1
#DSUB -R cpu=128
#DSUB -oo roms.%J.out
#DSUB -oe roms.%J.err

LOG_FILE="namd-run.log"

>"$LOG_FILE"
$RUN_TOOL "namd" "time -p mpirun --allow-run-as-root -np 1 namd2 +ppn 127 ${test_name}.namd +setcpuaffinity" $LOG_FILE

echo "ALL commands executed. Performance log saved to $LOG_FILE"

