[SERVER]
11.11.11.11

[DOWNLOAD]
moose/2025-05-09-release

[DEPENDENCY]
set -e
module purge
module use ./software/modulefiles
./jarvis -install kgcc/10.3.1 com
module load kgcc/10.3.1
./jarvis -install bisheng/4.1.0 com
module load bisheng/4.1.0
./jarvis -install hmpi/2.4.2 bisheng
module load hmpi/2.4.2
./jarvis -install python3/3.9.9 bisheng

mkdir -p ${JARVIS_ROOT}/software/apps/moose
git clone https://github.com/idaholab/moose.git -b 2025-05-09-release ${JARVIS_DOWNLOAD}/moose
cd ${JARVIS_DOWNLOAD}/moose/
git submodule update --init --recursive
cp -ar ${JARVIS_DOWNLOAD}/moose ${JARVIS_TMP_DOWNLOAD}/moose

[ENV]
module purge
module use ./software/modulefiles
module load kgcc/10.3.1
module load bisheng/4.1.0
module load hmpi/2.4.2
module load python3/3.9.9

[APP]
app_name = moose
build_dir = ${JARVIS_TMP_DOWNLOAD}/moose
binary_dir = ${JARVIS_TMP_DOWNLOAD}/moose/test
case_dir = ${JARVIS_TMP_DOWNLOAD}/moose/test/tests/preconditioners/hmg

[BUILD]
export METHODS=opt
./scripts/update_and_rebuild_petsc.sh --skip-submodule-update --with-64-bit-indices --with-openmp=0 --with-mpi-dir=${JARVIS_MPI}/hmpi2.4.2-bisheng4.1.0/2.4.2
MOOSE_JOBS=$(nproc) ./scripts/update_and_rebuild_libmesh.sh --skip-submodule-update
MOOSE_JOBS=$(nproc) ./scripts/update_and_rebuild_wasp.sh --skip-submodule-update

cd test/
pip3 install PyYAML==6.0.2 Jinja2==3.1.4 packaging==24.2
make -j$(nproc)

[CLEAN]
make clean

[RUN]
#单节点测试
run = time -p mpirun --allow-run-as-root -n $(nproc)
#多节点测试(多节点运行中的“--hostfile”参数为节点名的列表，在当前目录下创建一个“hostfile”文件，写入多个节点的hostname)
#run = time -p mpirun --allow-run-as-root -n $(nproc) --hostfile hostfile
binary = moose_test-opt -i diffusion_hmg.i Mesh/dmg/dim=3 Mesh/dmg/nz=200 Outputs/file_base=diffusion_hmg_3d_out -log_view --error --error-override --libtorch-device cpu
nodes = 1
